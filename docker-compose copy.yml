version: "3.9"

services:
  yt_postgres:
    image: postgres:15
    container_name: yt_postgres
    volumes:
      - ~/.pg/pg_data/yt:/var/lib/postgresql/data
    env_file:
      - .env
  redis:
    image: redis
  puppeteer:
      build:
        dockerfile: Dockerfile
        context: .
      image: yt_django:latest
      container_name: yt_django
      depends_on:
        - yt_postgres
      volumes:
        - static_volume:/yt/static
        - media_volume:/yt/media
              #монтируем папку на хосте в которую будут помещаться файлы .json после парсинга - для отладки, потом убрать
        # - /home/skiner/parsing_data:/yt/parsing_data
        - /home/projects/Slow_news/parsing_data:/yt/parsing_data
      env_file:
        - .env
      command:
        #выполняем миграции и запускаем веб сервер
        bash -c "./manage.py collectstatic --noinput && ./manage.py makemigrations && ./manage.py migrate && gunicorn -b 0.0.0.0:8000 puppeteer.wsgi:application"
  nginx:
      build:
        dockerfile: ./Dockerfile
        context: ./docker/nginx/
      container_name: yt_nginx
      image: yt_nginx
      volumes:
        - static_volume:/yt/static
        - media_volume:/yt/media
      depends_on:
        - puppeteer
      ports:
        - "${NGINX_EXTERNAL_PORT}:80"
  worker:
      build:
        context: .
      volumes:
      #монтируем папку на хосте в которую будут помещаться файлы .json после парсинга - для отладки, потом убрать
        # - /home/skiner/parsing_data:/yt/parsing_data
        - /home/projects/Slow_news/parsing_data:/yt/parsing_data
      #запускаем воркер с рабочей директорией в текущей папке где модуль celery находится в проекте puppeteer
      command: ['celery', '--workdir=.', '-A', 'puppeteer', 'worker', '--loglevel=INFO']

volumes:
    static_volume:
    media_volume:
