import os
from pathlib import Path
import telebot
from telebot import types, TeleBot
import requests
import datetime
import sys

import logging
# from news.templatetags.news_tags import trim_author
from django.utils.html import linebreaks
from django.template.defaultfilters import truncatewords

# –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∫ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
project_root = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ PYTHONPATH
sys.path.append(project_root)
# –£–∫–∞–∂–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'puppeteer.settings')
import django
django.setup()
bot = TeleBot('5659259939:AAG5XXvMKpVzHC7YqZ2INM8wJ7ryu4gVdZU')
# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, 
                    format='%(asctime)s - %(levelname)s - %(message)s',
                    handlers=[
                        logging.FileHandler("/var/log/bot.log"),
                        # logging.StreamHandler()
                        logging.StreamHandler(sys.stdout),  # –≤—ã–≤–æ–¥ –ª–æ–≥–æ–≤ –≤ stdout
    ]
)

def trim_author(text):
    if text:
        # –ò—â–µ–º –∏–Ω–¥–µ–∫—Å –ø–µ—Ä–≤–æ–≥–æ –≤—Ö–æ–∂–¥–µ–Ω–∏—è –¥–≤—É—Ö –ø—Ä–æ–±–µ–ª–æ–≤
        index = text.find('  ')
        if index != -1:
            return text[:index]
    return text

def trim_content(content, word_limit=35):
    if not content:
        return ""  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É, –µ—Å–ª–∏ –∫–æ–Ω—Ç–µ–Ω—Ç –ø—É—Å—Ç–æ–π
    # –û–±—Ä–µ–∑–∞–µ–º –¥–æ 35 —Å–ª–æ–≤
    # –†–∞–∑–±–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç –Ω–∞ —Å–ª–æ–≤–∞ –∏ –æ–±—Ä–µ–∑–∞–µ–º –¥–æ word_limit
    words = content.split()[:word_limit]
    return ' '.join(words)  # –û–±—ä–µ–¥–∏–Ω—è–µ–º —Å–ª–æ–≤–∞ –æ–±—Ä–∞—Ç–Ω–æ –≤ —Å—Ç—Ä–æ–∫—É

@bot.message_handler(commands=['start'])
def start_message(message):
    print("–ö–æ–º–∞–Ω–¥–∞ /start –ø–æ–ª—É—á–µ–Ω–∞")  # –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    print(sys.path)
    logging.info("–ö–æ–º–∞–Ω–¥–∞ /start –ø–æ–ª—É—á–µ–Ω–∞")
    keyboard_category = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard_category.add(types.KeyboardButton(text='–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É'))
    keyboard_category.add(types.KeyboardButton(text='–û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏'))
    bot.send_message(
        message.chat.id,
        text=f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {message.from_user.first_name}!\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=keyboard_category
    )

@bot.message_handler(content_types=["text"])
def next_message(message):
    print(f"–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: {message.text}")  # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    print(sys.path)
    logging.info(f"–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: {message.text}")
    if message.text.lower() == '–ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É' or message.text.lower() == '/subscribe':
        from news.models import TelegramSubscriber  # –û—Ç–ª–æ–∂–µ–Ω–Ω—ã–π –∏–º–ø–æ—Ä—Ç –∑–¥–µ—Å—å
        chat_id = message.chat.id
        username = message.from_user.username

        subscriber, created = TelegramSubscriber.objects.get_or_create(
            chat_id=chat_id,
            defaults={'username': username}
        )
        
        if created:
            bot.send_message(chat_id, "–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É –Ω–æ–≤–æ—Å—Ç–µ–π.")
        else:
            bot.send_message(chat_id, "–í—ã —É–∂–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É.")
    
    elif message.text.lower() == '–æ—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏' or message.text.lower() == '/unsubscribe':
        print(sys.path)
        from news.models import TelegramSubscriber  # –û—Ç–ª–æ–∂–µ–Ω–Ω—ã–π –∏–º–ø–æ—Ä—Ç –∑–¥–µ—Å—å
        chat_id = message.chat.id
        
        deleted, _ = TelegramSubscriber.objects.filter(chat_id=chat_id).delete()
        
        if deleted:
            bot.send_message(chat_id, "–í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π.")
        else:
            bot.send_message(chat_id, "–í—ã –Ω–µ –±—ã–ª–∏ –ø–æ–¥–ø–∏—Å–∞–Ω—ã.")
    
    else:
        bot.send_message(message.chat.id, f"–ù–µ–¥–æ—Å—Ç—É–ø–Ω–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è: {message.text}")
        logging.info(f"–ù–µ–¥–æ—Å—Ç—É–ø–Ω–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è: {message.text}")

def send_message_with_retry(subscriber, message, image=None, retries=3, delay=3):
    for attempt in range(retries):
        try:
            if image:
                logging.info(f"–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {subscriber.chat_id}, –ø–æ–ø—ã—Ç–∫–∞ {attempt + 1}")
                bot.send_photo(chat_id=subscriber.chat_id, photo=image, caption=message, parse_mode="HTML")
            else:
                logging.info(f"–û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–æ—Å—Ç–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –±–µ–∑ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {subscriber.chat_id}, –ø–æ–ø—ã—Ç–∫–∞ {attempt + 1}")
                bot.send_message(subscriber.chat_id, message, parse_mode="HTML")
            return True
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {subscriber.chat_id}: {e}, –ø–æ–ø—ã—Ç–∫–∞ {attempt + 1}")
            if attempt + 1 < retries:
                time.sleep(delay)
            else:
                return False
                

def send_news(type_message="news", frequency_sending="every_hour"):
    from news.models import TelegramSubscriber, News, Category  # –û—Ç–ª–æ–∂–µ–Ω–Ω—ã–π –∏–º–ø–æ—Ä—Ç –∑–¥–µ—Å—å, –¥–æ–±–∞–≤–∏—Ç—å –º–æ–¥–µ–ª—å –≥–æ—Ä–æ–¥–æ–≤ –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑–∞ –∏ –º–æ–¥–µ–ª—å –≤–∞–ª—é—Ç
    today = datetime.date.today()
    subscribers = TelegramSubscriber.objects.filter(frequency_sending=frequency_sending)

    if type_message == "news":
        print(f"–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–Ω–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏")
        logging.info(f"–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–Ω–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏")
        categories = Category.objects.all()
        
        for category in categories:
            print(f"–ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤–æ—Å—Ç–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º")
            logging.info(f"–ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤–æ—Å—Ç–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º")
            news = News.objects.filter(cat=category, is_published=True, is_sent=False)

            if news.exists():
                for article in news:
                    if not article.is_sent:
                        print(f"–§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ")
                        logging.info(f"–§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ")
                        category_styles = {
                            '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å': 'üîí',
                            '–°—Ç–∞—Ç—å–∏': 'üìÑ',
                            '–û–±–∑–æ—Ä—ã': 'üîç',
                            '–ò–Ω—Ç–µ—Ä–≤—å—é': 'üó£Ô∏è',
                        }
                        category_style = category_styles.get(category.name, 'i')
                        author = trim_author(article.author)

                        #–ø–µ—Ä–µ–¥–µ–ª–∞—Ç—å —á—Ç–æ–±—ã —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–ª–æ—Å—å –¥–≤–∞ —Ç–∏–ø–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∏—Å—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
                        # if message_format == 'full':
                        #     content = article.content
                        # else:
                        #     content = trim_content(article.content, world_limit=35)

                        image = article.image if article.image else None

                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ —Ç–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º, –∫—Ç–æ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –∫–æ—Ä–æ—Ç–∫–∏–µ —Ç–∏–ø—ã –Ω–æ–≤–æ—Å—Ç–µ–π –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
                        subscribers_to_short_news = subscribers.filter(subscribed_to_categories=category, message_format="short")
                        for subscriber in subscribers_to_short_news:
                            content = trim_content(article.content, world_limit=35)
                            message = f'{category_style} <b>{category.name} {article.date}</b>\n\n' \
                                    f'<a href="https://slow-news.sytes.net{article.get_absolute_url()}">{article.title}</a>\n' \
                                    f'{content}\n' \
                                    f'{author}'
                            
                            print(f"–û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ—Ä–æ—Ç–∫–æ–≥–æ –Ω–æ–≤–æ—Å—Ç–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {subscriber.chat_id}")
                            logging.info(f"–û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ—Ä–æ—Ç–∫–æ–≥–æ –Ω–æ–≤–æ—Å—Ç–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {subscriber.chat_id}")
                            success = send_message_with_retry(subscriber, message, image, retries=3, delay=3)
                            if not success:
                                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∫–æ—Ä–æ—Ç–∫–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {subscriber.chat_id}: –ø–æ–≤—Ç–æ—Ä–Ω—ã–µ –ø–æ–ø—ã—Ç–∫–∏ –Ω–µ —É–≤–µ–Ω—á–∞–ª–∏—Å—å —É—Å–ø–µ—Ö–æ–º")
                                logging.info(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∫–æ—Ä–æ—Ç–∫–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {subscriber.chat_id}: –ø–æ–≤—Ç–æ—Ä–Ω—ã–µ –ø–æ–ø—ã—Ç–∫–∏ –Ω–µ —É–≤–µ–Ω—á–∞–ª–∏—Å—å —É—Å–ø–µ—Ö–æ–º")
                        
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ —Ç–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º, –∫—Ç–æ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –ø–æ–ª–Ω—ã–µ —Ç–∏–ø—ã –Ω–æ–≤–æ—Å—Ç–µ–π –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
                        subscribers_to_full_news = subscribers.filter(subscribed_to_categories=category, message_format="full")
                        for subscriber in subscribers_to_full_news:
                            content = article.content
                            message = f'{category_style} <b>{category.name} {article.date}</b>\n\n' \
                                    f'<a href="https://slow-news.sytes.net{article.get_absolute_url()}">{article.title}</a>\n' \
                                    f'{content}\n' \
                                    f'{author}'
                            
                            print(f"–û—Ç–ø—Ä–∞–≤–∫–∞ –¥–ª–∏–Ω–Ω–æ–≥–æ –Ω–æ–≤–æ—Å—Ç–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {subscriber.chat_id}")
                            logging.info(f"–û—Ç–ø—Ä–∞–≤–∫–∞ –¥–ª–∏–Ω–Ω–æ–≥–æ –Ω–æ–≤–æ—Å—Ç–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {subscriber.chat_id}")
                            success = send_message_with_retry(subscriber, message, image, retries=3, delay=3)
                            if not success:
                                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–ª–∏–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {subscriber.chat_id}: –ø–æ–≤—Ç–æ—Ä–Ω—ã–µ –ø–æ–ø—ã—Ç–∫–∏ –Ω–µ —É–≤–µ–Ω—á–∞–ª–∏—Å—å —É—Å–ø–µ—Ö–æ–º")
                                logging.info(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–ª–∏–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {subscriber.chat_id}: –ø–æ–≤—Ç–æ—Ä–Ω—ã–µ –ø–æ–ø—ã—Ç–∫–∏ –Ω–µ —É–≤–µ–Ω—á–∞–ª–∏—Å—å —É—Å–ø–µ—Ö–æ–º")

                        # –ü–æ–º–µ—á–∞–µ–º –Ω–æ–≤–æ—Å—Ç—å –∫–∞–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é
                        print(f"–ù–æ–≤–æ—Å—Ç—å {article.title} –ø–æ–º–µ—á–µ–Ω–∞ –∫–∞–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è.")
                        logging.info(f"–ù–æ–≤–æ—Å—Ç—å {article.title} –ø–æ–º–µ—á–µ–Ω–∞ –∫–∞–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è.")
                        article.is_sent = True
                        article.save()

            else:
                print(f"–í –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {category.name} –Ω–µ—Ç –Ω–æ–≤–æ—Å—Ç–µ–π –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏.")
                logging.info(f"–í –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {category.name} –Ω–µ—Ç –Ω–æ–≤–æ—Å—Ç–µ–π –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏.")

    elif type_message == "weather":
        
        subscribers_to_short_weather = subscribers.filter(message_format="short")
        for subscriber in subscribers_to_short_weather:
            try:
                # –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –ø–æ–≥–æ–¥—ã
                print(f"–û—Ç–ø—Ä–∞–≤–∫–∞ –∫—Ä–∞—Ç–∫–æ–≥–æ –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {subscriber.chat_id}")
                logging.info(f"–û—Ç–ø—Ä–∞–≤–∫–∞ –∫—Ä–∞—Ç–∫–æ–≥–æ –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {subscriber.chat_id}")
                image = None
                temp = "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞"
                message = f'–ö—Ä–∞—Ç–∫–∏–π –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –¥–ª—è –≥–æ—Ä–æ–¥–∞\n' \
                        f'{temp}'
                success = send_message_with_retry(subscriber, message, image, retries=3, delay=3)
                if not success:
                    print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∫—Ä–∞—Ç–∫–æ–≥–æ –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {subscriber.chat_id}: –ø–æ–≤—Ç–æ—Ä–Ω—ã–µ –ø–æ–ø—ã—Ç–∫–∏ –Ω–µ —É–≤–µ–Ω—á–∞–ª–∏—Å—å —É—Å–ø–µ—Ö–æ–º")
                    logging.info(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∫—Ä–∞—Ç–∫–æ–≥–æ –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {subscriber.chat_id}: –ø–æ–≤—Ç–æ—Ä–Ω—ã–µ –ø–æ–ø—ã—Ç–∫–∏ –Ω–µ —É–≤–µ–Ω—á–∞–ª–∏—Å—å —É—Å–ø–µ—Ö–æ–º")
                        
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∫—Ä–∞—Ç–∫–æ–≥–æ –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {subscriber.chat_id}: {e}")
                logging.info(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∫—Ä–∞—Ç–∫–æ–≥–æ –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {subscriber.chat_id}: {e}")

        subscribers_to_full_weather = subscribers.filter(message_format="full")
        for subscriber in subscribers_to_full_weather:
            try:
                # –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –ø–æ–≥–æ–¥—ã
                print(f"–û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–ª–Ω–æ–≥–æ –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {subscriber.chat_id}")
                logging.info(f"–û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–ª–Ω–æ–≥–æ –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {subscriber.chat_id}")
                image = None
                temp = "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞"
                message = f'–ü–æ–ª–Ω—ã–π –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –¥–ª—è –≥–æ—Ä–æ–¥–∞\n' \
                        f'{temp}'
                success = send_message_with_retry(subscriber, message, image, retries=3, delay=3)
                if not success:
                    print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–æ–ª–Ω–æ–≥–æ –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {subscriber.chat_id}: –ø–æ–≤—Ç–æ—Ä–Ω—ã–µ –ø–æ–ø—ã—Ç–∫–∏ –Ω–µ —É–≤–µ–Ω—á–∞–ª–∏—Å—å —É—Å–ø–µ—Ö–æ–º")
                    logging.info(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª–Ω–æ–≥–æ –∫—Ä–∞—Ç–∫–æ–≥–æ –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {subscriber.chat_id}: –ø–æ–≤—Ç–æ—Ä–Ω—ã–µ –ø–æ–ø—ã—Ç–∫–∏ –Ω–µ —É–≤–µ–Ω—á–∞–ª–∏—Å—å —É—Å–ø–µ—Ö–æ–º")
                        
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–æ–ª–Ω–æ–≥–æ –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {subscriber.chat_id}: {e}")
                logging.info(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–æ–ª–Ω–æ–≥–æ –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {subscriber.chat_id}: {e}")

    elif type_message == "currency":
        for subscriber in subscribers:
            try:
                # –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç
                image = None
                currency = "–°–ø–∏—Å–æ–∫ –≤–∞–ª—é—Ç"
                message = f'–ö—É—Ä—Å –≤–∞–ª—é—Ç –Ω–∞ \n' \
                        f'{currency}'
                success = send_message_with_retry(subscriber, message, image, retries=3, delay=3)
                if not success:
                    print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {subscriber.chat_id}: –ø–æ–≤—Ç–æ—Ä–Ω—ã–µ –ø–æ–ø—ã—Ç–∫–∏ –Ω–µ —É–≤–µ–Ω—á–∞–ª–∏—Å—å —É—Å–ø–µ—Ö–æ–º")
                    logging.info(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∫—É—Ä—Å–∞ –≤–∞–ª—é—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {subscriber.chat_id}: –ø–æ–≤—Ç–æ—Ä–Ω—ã–µ –ø–æ–ø—ã—Ç–∫–∏ –Ω–µ —É–≤–µ–Ω—á–∞–ª–∏—Å—å —É—Å–ø–µ—Ö–æ–º")
                        
                print(f"–û—Ç–ø—Ä–∞–≤–∫–∞ –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {subscriber.chat_id}")
                logging.info(f"–û—Ç–ø—Ä–∞–≤–∫–∞ –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {subscriber.chat_id}")
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {subscriber.chat_id}: {e}")
                logging.info(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {subscriber.chat_id}: {e}")



    # # news = News.objects.filter(date=today, is_published=True, is_sent=False)
    # news = News.objects.filter(is_published=True, is_sent=False)
    # print(f"–ù–∞–π–¥–µ–Ω–æ –Ω–æ–≤–æ—Å—Ç–µ–π –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏: {news.count()}")
    # logging.info(f"–ù–∞–π–¥–µ–Ω–æ –Ω–æ–≤–æ—Å—Ç–µ–π –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏: {news.count()}")
    # #—Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π —Å –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–æ–π –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–æ–∫


    # def send_message_with_retry(subscriber, message, image=None, retries=3, delay=3):
    #     for attempt in range(retries):
    #         try:
    #             if image:
    #                 print(f"–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è c –∫–∞—Ä—Ç–∏–Ω–∫–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {subscriber.chat_id}, –ø–æ–ø—ã—Ç–∫–∞ {attempt + 1}")
    #                 logging.info(f"–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è c –∫–∞—Ä—Ç–∏–Ω–∫–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {subscriber.chat_id}, –ø–æ–ø—ã—Ç–∫–∞ {attempt + 1}")
    #                 bot.send_photo(chat_id=subscriber.chat_id, photo=image, caption=message, parse_mode="HTML")
    #             else:
    #                 print(f"–û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–æ—Å—Ç–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –±–µ–∑ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {subscriber.chat_id}, –ø–æ–ø—ã—Ç–∫–∞ {attempt + 1}")
    #                 logging.info(f"–û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–æ—Å—Ç–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –±–µ–∑ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {subscriber.chat_id}, –ø–æ–ø—ã—Ç–∫–∞ {attempt + 1}")
    #                 bot.send_message(subscriber.chat_id, message, parse_mode="HTML")
    #             return True  # –°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ, –≤—ã—Ö–æ–¥ –∏–∑ —Ü–∏–∫–ª–∞
    #         except Exception as e:
    #             print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {subscriber.chat_id}: {e}, –ø–æ–ø—ã—Ç–∫–∞ {attempt + 1}")
    #             logging.info(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {subscriber.chat_id}: {e}, –ø–æ–ø—ã—Ç–∫–∞ {attempt + 1}")
    #             if attempt + 1 < retries:  # –ï—Å–ª–∏ –Ω–µ –ø–æ—Å–ª–µ–¥–Ω—è—è –ø–æ–ø—ã—Ç–∫–∞, –¥–µ–ª–∞–µ–º –ø–∞—É–∑—É –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π
    #                 print(f"–ó–∞–¥–µ—Ä–∂–∫–∞ {delay} —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–æ–π...")
    #                 time.sleep(delay)  # –ó–∞–¥–µ—Ä–∂–∫–∞ –≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥
    #             else:
    #                 return False  # –ï—Å–ª–∏ –¥–æ—Å—Ç–∏–≥–ª–∏ –ª–∏–º–∏—Ç–∞ –ø–æ–ø—ã—Ç–æ–∫
    # # –µ—Å–ª–∏ –µ—Å—Ç—å –Ω–æ–≤–æ—Å—Ç–∏ –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–æ —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    # if news.exists():
    #     for article in news:
    #         if not article.is_sent:
    #             # –¥–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏–∑–∞—Ü–∏—é –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–æ–≤–æ—Å—Ç–∏
    #             category = article.cat.name  # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    #             category_styles = {
    #                 '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å': 'üîí',
    #                 '–°—Ç–∞—Ç—å–∏': 'üìÑ',
    #                 '–û–±–∑–æ—Ä—ã': 'üîç',
    #                 '–ò–Ω—Ç–µ—Ä–≤—å—é': 'üó£Ô∏è',
    #             }
    #             # –¥–µ–ª–∞–µ–º –æ–±—Ä–µ–∑–∞–Ω–∏–µ –ø–æ–ª–µ–π –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
    #             author = trim_author(article.author)
    #             content = trim_content(article.content, word_limit=35)
    #             category_style = category_styles.get(category, '‚ÑπÔ∏è')  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π —Å–∏–º–≤–æ–ª
    #             print(f"–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ—Å—Ç—å: {article.title}")
    #             logging.info(f"–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ—Å—Ç—å: {article.title}")
    #             # —Å–æ–±–∏—Ä–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    #             message = f'{category_style} <b>{category} {article.date}</b>\n\n' \
    #                     f'<a href="https://slow-news.sytes.net{article.get_absolute_url()}">{article.title}</a>\n' \
    #                     f'{content}\n' \
    #                     f'{author}'
    #                     # f'{article.author}'

    #             #—Ü–∏–∫–ª –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —Å –ø–µ—Ä–µ–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–æ–∫
    #             for subscriber in subscribers:
    #                 image = article.image if article.image else None
    #                 success = send_message_with_retry(subscriber, message, image, retries=3, delay=3)
    #                 if not success:
    #                     print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {subscriber.chat_id}: –ø–æ–≤—Ç–æ—Ä–Ω—ã–µ –ø–æ–ø—ã—Ç–∫–∏ –Ω–µ —É–≤–µ–Ω—á–∞–ª–∏—Å—å —É—Å–ø–µ—Ö–æ–º")
    #                     logging.info(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {subscriber.chat_id}: –ø–æ–≤—Ç–æ—Ä–Ω—ã–µ –ø–æ–ø—ã—Ç–∫–∏ –Ω–µ —É–≤–µ–Ω—á–∞–ª–∏—Å—å —É—Å–ø–µ—Ö–æ–º")
    #             #–ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–º–µ—á–∞–µ–º –Ω–æ–≤–æ—Å—Ç—å –∫–∞–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é
    #             article.is_sent = True
    #             print(f"–ù–æ–≤–æ—Å—Ç—å {article.title} –ø–æ–º–µ—á–µ–Ω–∞ –∫–∞–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è.")
    #             logging.info(f"–ù–æ–≤–æ—Å—Ç—å {article.title} –ø–æ–º–µ—á–µ–Ω–∞ –∫–∞–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è.")
    #             article.save()
    # else:
    #     for subscriber in subscribers:
    #         try:
    #             # bot.send_message(subscriber.chat_id, "–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Å–≤–µ–∂–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –Ω–µ—Ç.")
    #             print(f"–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {subscriber.chat_id}: –ù–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–µ—Ç")
    #             logging.info(f"–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {subscriber.chat_id}: –ù–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–µ—Ç")
    #         except Exception as e:
    #             print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {subscriber.chat_id}: {e}")
    #             logging.info(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {subscriber.chat_id}: {e}")

def run_bot():
    print("–ó–∞–ø—É—Å–∫ Telegram-–±–æ—Ç–∞...")
    logging.info("–ó–∞–ø—É—Å–∫ Telegram-–±–æ—Ç–∞...")
    # bot.polling(none_stop=True)
    try:
        #bot.polling(none_stop=True)
        # –ó–∞–ø—É—Å–∫ polling —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π —Ç–∞–π–º-–∞—É—Ç–æ–≤
        bot.polling(none_stop=True, timeout=60, long_polling_timeout=60)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    run_bot()


# —É–±—Ä–∞–ª —á—Ç–æ–±—ã –∑–∞–ø—É—Å–∫ —à–µ–ª —á–µ—Ä–µ–∑ Supervisor.
# if __name__ == "__main__":
#     try:
#         run_bot()
#     except Exception as e:
#         print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")