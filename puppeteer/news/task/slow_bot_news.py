import os
from pathlib import Path
import sys
import logging

# –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∫ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
project_root = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ PYTHONPATH
sys.path.append(project_root)
# –£–∫–∞–∂–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'puppeteer.settings')
import django
django.setup()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, 
                    format='%(asctime)s - %(levelname)s - %(message)s',
                    handlers=[
                        logging.FileHandler("/var/log/bot.log"),
                        # logging.StreamHandler()
                        logging.StreamHandler(sys.stdout),  # –≤—ã–≤–æ–¥ –ª–æ–≥–æ–≤ –≤ stdout
    ]
)

#–æ–±—Ä–µ–∑–∫–∞ –∞–≤—Ç–æ—Ä–∞
def trim_author(text):
    if text:
        # –ò—â–µ–º –∏–Ω–¥–µ–∫—Å –ø–µ—Ä–≤–æ–≥–æ –≤—Ö–æ–∂–¥–µ–Ω–∏—è –¥–≤—É—Ö –ø—Ä–æ–±–µ–ª–æ–≤
        index = text.find('  ')
        if index != -1:
            return text[:index]
    return text

#–æ–±—Ä–µ–∑–∫–∞ —Ç–µ–∫—Å—Ç–∞ –Ω–æ–≤–æ—Å—Ç–∏
def trim_content(content, word_limit=35):
    if not content:
        return ""  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É, –µ—Å–ª–∏ –∫–æ–Ω—Ç–µ–Ω—Ç –ø—É—Å—Ç–æ–π
    # –û–±—Ä–µ–∑–∞–µ–º –¥–æ 35 —Å–ª–æ–≤
    # –†–∞–∑–±–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç –Ω–∞ —Å–ª–æ–≤–∞ –∏ –æ–±—Ä–µ–∑–∞–µ–º –¥–æ word_limit
    words = content.split()[:word_limit]
    return ' '.join(words)  # –û–±—ä–µ–¥–∏–Ω—è–µ–º —Å–ª–æ–≤–∞ –æ–±—Ä–∞—Ç–Ω–æ –≤ —Å—Ç—Ä–æ–∫—É

#–ø–æ–ª—É—á–∏—Ç—å –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –Ω–∞ –Ω–æ–≤–æ—Å—Ç–∏
# def get_subscribers_to_news(subscribers, category, message_format):
#     return subscribers.filter(subscribed_to_categories=category, message_format=message_format)

#—Å–±–æ—Ä–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π
def prepare_and_send_news(subscribers, article, category_style, content, image, message_format):
    from news.slow_bot import send_message_with_retry
    for subscriber in subscribers:
        message = (
            f'{category_style} <b>{article.cat.name} {article.date}</b>\n\n'
            f'<a href="https://slow-news.sytes.net{article.get_absolute_url()}">{article.title}</a>\n'
            f'{content}\n'
            f'{trim_author(article.author)}'
        )
        print(f"–û—Ç–ø—Ä–∞–≤–∫–∞ {message_format} –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {article.cat.name} –Ω–æ–≤–æ—Å—Ç–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {subscriber.chat_id}")
        logging.info(f"–û—Ç–ø—Ä–∞–≤–∫–∞ {message_format} –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {article.cat.name} –Ω–æ–≤–æ—Å—Ç–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {subscriber.chat_id}")
        # –ü–æ–ª—É—á–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ —á–µ—Ä–µ–∑ –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã–π –∏–º–ø–æ—Ä—Ç
        success = send_message_with_retry(subscriber, message, image, retries=3, delay=3)
        if success:
            print(f"–ù–æ–≤–æ—Å—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ {message_format} –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {article.cat.name} —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {subscriber.chat_id}")
            logging.info(f"–ù–æ–≤–æ—Å—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ {message_format} –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {article.cat.name} —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {subscriber.chat_id}")
        else:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ {message_format} –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {article.cat.name} –Ω–æ–≤–æ—Å—Ç–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {subscriber.chat_id}")
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ {message_format} –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {article.cat.name} –Ω–æ–≤–æ—Å—Ç–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {subscriber.chat_id}")
        # if not success:
        #     logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ {message_format} —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {subscriber.chat_id}")


# def send_news(type_message="news", frequency_sending="every_hour"):
def send_news_frequency(frequency_sending="every_hour"):
    #–ø–æ–ª—É—á–∞–µ–º –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –ø–æ —á–∞—Å—Ç–∞—Ç–æ–µ —Ä–∞—Å—Å—ã–ª–∫–∏ —á–µ—Ä–µ–∑ –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã–π –∏–º–ø–æ—Ä—Ç
    from news.models import TelegramSubscriber, News, Category
    subscribers = TelegramSubscriber.objects.filter(frequency_sending=frequency_sending)

    if subscribers.exists():
        #—Å—Ç–∏–ª–∏–∑–∞—Ü–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–æ–≤–æ—Å—Ç–∏
        categories = Category.objects.all()
        category_styles = {
            '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å': 'üîí',
            '–°—Ç–∞—Ç—å–∏': 'üìÑ',
            '–û–±–∑–æ—Ä—ã': 'üîç',
            '–ò–Ω—Ç–µ—Ä–≤—å—é': 'üó£Ô∏è',
        }
        #–ø—Ä–æ–∫–æ—Ö–æ–¥–∏–º –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –Ω–æ–≤–æ—Å—Ç–µ–π
        for category in categories:
            cat_news_subscribers = subscribers.filter(subscribed_to_categories=category)
            if cat_news_subscribers.exists():
                #–ø–æ–ª—É—á–∞–µ–º –Ω–æ–≤–æ—Å—Ç–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                news = News.objects.filter(cat=category, is_published=True, is_sent=False)
                if news.exists():
                    for article in news:
                        category_style = category_styles.get(category.name, 'i')
                        image = article.image if article.image else None
                        # –ü–æ–¥–ø–∏—Å—á–∏–∫–∏ –¥–ª—è –∫–æ—Ä–æ—Ç–∫–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                        #short_news_subscribers = get_subscribers_to_news(subscribers, category, "short")
                        short_cat_news_subscribers = cat_news_subscribers.filter(message_format="short")
                        if short_cat_news_subscribers.exists():
                            short_content = (trim_content(article.content, word_limit=35) + '...')
                            #–ü–æ–¥–≥–æ—Ç–æ–≤–∏–º –∏ –æ—Ç–ø—Ä–∞–≤–∏–º —Å–æ–∫—Ä–∞—â–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
                            prepare_and_send_news(short_cat_news_subscribers, article, category_style, short_content, image, "short")
                            
                        else:
                            print(f"–° –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å—é {frequency_sending} –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {category.name} –Ω–µ—Ç –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –Ω–∞ –∫–æ—Ä–æ—Ç–∫–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è")
                            logging.info(f"–° –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å—é {frequency_sending} –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {category.name} –Ω–µ—Ç –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –Ω–∞ –∫–æ—Ä–æ—Ç–∫–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è")

                        # –ü–æ–¥–ø–∏—Å—á–∏–∫–∏ –¥–ª—è –ø–æ–ª–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                        #full_news_subscribers = get_subscribers_to_news(subscribers, category, "full")
                        full_cat_news_subscribers = cat_news_subscribers.filter(message_format="full")

                        if full_cat_news_subscribers.exists():
                            full_content = article.content
                            #–ü–æ–¥–≥–æ—Ç–æ–≤–∏–º –∏ –æ—Ç–ø—Ä–∞–≤–∏–º —Å–æ–∫—Ä–∞—â–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
                            prepare_and_send_news(full_cat_news_subscribers, article, category_style, full_content, image, "full")
                        else:
                            print(f"–° –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å—é {frequency_sending} –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {category.name} –Ω–µ—Ç –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –Ω–∞ –¥–ª–∏–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è")
                            logging.info(f"–° –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å—é {frequency_sending} –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {category.name} –Ω–µ—Ç –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –Ω–∞ –¥–ª–∏–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è")
                        # –û—Ç–º–µ—á–∞–µ–º –Ω–æ–≤–æ—Å—Ç—å –∫–∞–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é
                        try:
                            article.is_sent = True
                            article.save()
                            print(f"–ù–æ–≤–æ—Å—Ç—å {article.title} –ø–æ–º–µ—á–µ–Ω–∞ –∫–∞–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è.")
                            logging.info(f"–ù–æ–≤–æ—Å—Ç—å {article.title} –ø–æ–º–µ—á–µ–Ω–∞ –∫–∞–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è.")
                        except Exception as e:
                            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –Ω–æ–≤–æ—Å—Ç–∏ {article.title}: {str(e)}")
                            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –Ω–æ–≤–æ—Å—Ç–∏ {article.title}: {str(e)}")

                        # article.is_sent = True
                        # article.save()
                        # logging.info(f"–ù–æ–≤–æ—Å—Ç—å {article.title} –ø–æ–º–µ—á–µ–Ω–∞ –∫–∞–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è.")
                else:
                    print(f"–í –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {category.name} –Ω–µ—Ç –Ω–æ–≤–æ—Å—Ç–µ–π –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏.")
                    logging.info(f"–í –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {category.name} –Ω–µ—Ç –Ω–æ–≤–æ—Å—Ç–µ–π –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏.")
            else:
                print(f"–ù–∞ —Ä–∞—Å—Å—ã–ª–∫—É –Ω–æ–≤–æ—Å—Ç–µ–π —Å –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å—é {frequency_sending} –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {category.name} –Ω–µ—Ç –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤")
                logging.info(f"–ù–∞ —Ä–∞—Å—Å—ã–ª–∫—É –Ω–æ–≤–æ—Å—Ç–µ–π —Å –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å—é {frequency_sending} –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {category.name} –Ω–µ—Ç –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤")
    else:
        print(f"–ù–∞ —Ä–∞—Å—Å—ã–ª–∫—É –Ω–æ–≤–æ—Å—Ç–µ–π —Å –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å—é {frequency_sending} –Ω–µ—Ç –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤")
        logging.info(f"–ù–∞ —Ä–∞—Å—Å—ã–ª–∫—É –Ω–æ–≤–æ—Å—Ç–µ–π —Å –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å—é {frequency_sending} –Ω–µ—Ç –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤")