FROM python:3.11.2

SHELL ["/bin/bash", "-c"]
# Настройки виртуального окружения: запрет создания кэш файлов и запрет буферизации сообщений с логами 
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1
# Обновим pip
RUN pip install --upgrade pip

# Создадим нового пользователя для работы в контейнере
RUN useradd -rms /bin/bash yt && chmod 777 /opt /run
# Создание и переход в каталог /yt
# WORKDIR /yt/puppeteer
WORKDIR /yt
# Создадим директории для файлов джанго в папке пользователя и дадим пользователю права на чтение и запись
RUN mkdir /yt/static && mkdir /yt/media && chown -R yt:yt /yt && chmod 755 /yt
# Меняем владельца каталогов и файлов на пользователя yt и копируем файлы из текущего каталога (где лежит Dockerfile) в рабочий каталог /yt
COPY --chown=yt:yt ./puppeteer .
COPY ./requirements.txt ./
# Установим зависимости проекта
RUN pip install -r requirements.txt
# Установим права на выполнение для manage.py
# RUN chmod +x /puppeteer/manage.py
# Переключаемся на пользователя
USER yt
# Запускаем проект с портом 8001, с веб сервером gunicorn
# CMD ["gunicorn", "-b", "0.0.0.0:8001", "puppeteer.wsgi:application"]
# CMD ["bash", "-c", "./puppeteer/manage.py makemigrations && ./puppeteer/manage.py migrate && ./puppeteer/manage.py runserver 0.0.0.0:9000"]

# RUN apt-get update -y && apt-get upgrade -y
# WORKDIR /app
# COPY ./requirements.txt ./
# RUN pip install -r requirements.txt
# COPY ./puppeteer ./puppeteer
# CMD ["bash", "-c", "./puppeteer/manage.py makemigrations && ./puppeteer/manage.py migrate && ./puppeteer/manage.py runserver 0.0.0.0:9000"]